{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\FMA\\\\sessions\\\\to-do-final-inclass\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ToDoForm from './components/ToDoForm';\nimport ToDoList from './components/ToDoList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('tasks'));\n    if (storedTasks) setTasks(storedTasks);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    filterTasks(filter);\n  }, [tasks, filter]);\n  const addTask = task => {\n    setTasks([...tasks, task]);\n  };\n  const toggleCompleted = index => {\n    const newTasks = tasks.map((task, i) => i === index ? {\n      ...task,\n      isCompleted: !task.isCompleted\n    } : task);\n    setTasks(newTasks);\n  };\n  const updateTask = (index, updatedTask) => {\n    const newTasks = tasks.map((task, i) => i === index ? updatedTask : task);\n    setTasks(newTasks);\n  };\n  const filterTasks = filterType => {\n    setFilter(filterType);\n    const today = new Date();\n    const yesterday = new Date();\n    const tomorrow = new Date();\n\n    // Set dates correctly without mutating the today date object\n    yesterday.setDate(today.getDate() - 1);\n    tomorrow.setDate(today.getDate() + 1);\n    const filtered = tasks.filter(task => {\n      const taskDate = new Date(task.date);\n      if (filterType === 'yesterday') {\n        return taskDate.toDateString() === yesterday.toDateString();\n      } else if (filterType === 'today') {\n        return taskDate.toDateString() === today.toDateString();\n      } else if (filterType === 'tomorrow') {\n        return taskDate.toDateString() === tomorrow.toDateString();\n      } else {\n        return true;\n      }\n    });\n    setFilteredTasks(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n        tasks: filteredTasks.length ? filteredTasks : tasks,\n        toggleCompleted: toggleCompleted,\n        updateTask: updateTask,\n        filterTasks: filterTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rz1nawY+BO9ojNv0ROvsvLeu1YA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToDoForm","ToDoList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","filteredTasks","setFilteredTasks","filter","setFilter","storedTasks","JSON","parse","localStorage","getItem","setItem","stringify","filterTasks","addTask","task","toggleCompleted","index","newTasks","map","i","isCompleted","updateTask","updatedTask","filterType","today","Date","yesterday","tomorrow","setDate","getDate","filtered","taskDate","date","toDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Documents/FMA/sessions/to-do-final-inclass/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ToDoForm from './components/ToDoForm';\nimport ToDoList from './components/ToDoList';\nimport './App.css';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('tasks'));\n    if (storedTasks) setTasks(storedTasks);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    filterTasks(filter);\n  }, [tasks, filter]);\n\n  const addTask = (task) => {\n    setTasks([...tasks, task]);\n  };\n\n  const toggleCompleted = (index) => {\n    const newTasks = tasks.map((task, i) =>\n      i === index ? { ...task, isCompleted: !task.isCompleted } : task\n    );\n    setTasks(newTasks);\n  };\n\n  const updateTask = (index, updatedTask) => {\n    const newTasks = tasks.map((task, i) =>\n      i === index ? updatedTask : task\n    );\n    setTasks(newTasks);\n  };\n\n  const filterTasks = (filterType) => {\n    setFilter(filterType);\n    const today = new Date();\n    const yesterday = new Date();\n    const tomorrow = new Date();\n\n    // Set dates correctly without mutating the today date object\n    yesterday.setDate(today.getDate() - 1);\n    tomorrow.setDate(today.getDate() + 1);\n\n    const filtered = tasks.filter((task) => {\n      const taskDate = new Date(task.date);\n      if (filterType === 'yesterday') {\n        return taskDate.toDateString() === yesterday.toDateString();\n      } else if (filterType === 'today') {\n        return taskDate.toDateString() === today.toDateString();\n      } else if (filterType === 'tomorrow') {\n        return taskDate.toDateString() === tomorrow.toDateString();\n      } else {\n        return true;\n      }\n    });\n    setFilteredTasks(filtered);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>To-Do List</h1>\n        <ToDoForm addTask={addTask} />\n        <ToDoList tasks={filteredTasks.length ? filteredTasks : tasks} toggleCompleted={toggleCompleted} updateTask={updateTask} filterTasks={filterTasks} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}